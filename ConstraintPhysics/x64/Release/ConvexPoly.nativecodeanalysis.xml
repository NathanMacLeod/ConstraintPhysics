<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>AABB.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'std::numeric_limits&lt;double&gt;::infinity' is constexpr, mark variable 'inf' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>AABB::combine</FUNCTION>
    <DECORATED>?combine@AABB@@SA?AU1@AEBV?$vector@UAABB@@V?$allocator@UAABB@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'maxD_i'.</DESCRIPTION>
    <FUNCTION>phyz::ConvexPoly::gen_interiorP</FUNCTION>
    <DECORATED>?gen_interiorP@ConvexPoly@phyz@@QEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>62</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>66</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_i' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'i&lt;points.size()' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'maxD_i' is an In/Out argument to 'std::vector&lt;mthz::Vec3,std::allocator&lt;mthz::Vec3&gt; &gt;::[]' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.32.31326\include\vector:1728)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_i' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'maxD_j'.</DESCRIPTION>
    <FUNCTION>phyz::ConvexPoly::gen_interiorP</FUNCTION>
    <DECORATED>?gen_interiorP@ConvexPoly@phyz@@QEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>62</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>66</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_j' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'i&lt;points.size()' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'maxD_j' is an In/Out argument to 'std::vector&lt;mthz::Vec3,std::allocator&lt;mthz::Vec3&gt; &gt;::[]' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.32.31326\include\vector:1728)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_j' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'std::numeric_limits&lt;double&gt;::infinity' is constexpr, mark variable 'inf' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>phyz::ConvexPoly::gen_AABB</FUNCTION>
    <DECORATED>?gen_AABB@ConvexPoly@phyz@@QEBA?AUAABB@@XZ</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Surface::surfaceID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@phyz@@QEAA@AEBV01@PEAVConvexPoly@1@@Z</DECORATED>
    <FUNCLINE>277</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Surface::surfaceID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>281</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Surface::surfaceID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>281</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Surface::surfaceID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>281</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Surface::normalDirection' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>281</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Surface::normalDirection</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>300</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>Size mismatch: 'unsigned __int64' passed as _Param_(3) when 'int' is required in call to 'printf'. </DESCRIPTION>
    <FUNCTION>phyz::Surface::getPointI</FUNCTION>
    <DECORATED>?getPointI@Surface@phyz@@QEBA?AVVec3@mthz@@H@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>