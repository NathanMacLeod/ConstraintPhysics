<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>AABB.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'std::numeric_limits&lt;double&gt;::infinity' is constexpr, mark variable 'inf' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>AABB::combine</FUNCTION>
    <DECORATED>?combine@AABB@@SA?AU1@AEBV?$vector@UAABB@@V?$allocator@UAABB@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::pInside</FUNCTION>
    <DECORATED>?pInside@phyz@@YA_NV?$vector@UProjP@phyz@@V?$allocator@UProjP@phyz@@@std@@@std@@UProjP@1@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::ExtremaInfo::min_pID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::ExtremaInfo::{ctor}</FUNCTION>
    <DECORATED>??0ExtremaInfo@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>137</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::ExtremaInfo::min_pID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.h</FILENAME>
      <LINE>34</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Manifold::max_pen_depth' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Manifold::{ctor}</FUNCTION>
    <DECORATED>??0Manifold@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Manifold::max_pen_depth</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.cpp</FILENAME>
      <LINE>283</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::SAT</FUNCTION>
    <DECORATED>?SAT@phyz@@YA?AUManifold@1@AEBVConvexPoly@1@AEBUGaussMap@1@01@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::SAT</FUNCTION>
    <DECORATED>?SAT@phyz@@YA?AUManifold@1@AEBVConvexPoly@1@AEBUGaussMap@1@01@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.h</FILENAME>
      <LINE>28</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::ContactP::magicID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::ContactP::{ctor}</FUNCTION>
    <DECORATED>??0ContactP@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::ContactP::magicID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.cpp</FILENAME>
      <LINE>342</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::merge_manifold</FUNCTION>
    <DECORATED>?merge_manifold@phyz@@YA?AUManifold@1@AEBU21@0@Z</DECORATED>
    <FUNCLINE>333</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>CollisionDetect.cpp</FILENAME>
      <LINE>379</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'max_indx'.</DESCRIPTION>
    <FUNCTION>phyz::cull_manifold</FUNCTION>
    <DECORATED>?cull_manifold@phyz@@YA?AUManifold@1@AEBU21@H@Z</DECORATED>
    <FUNCLINE>348</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>349</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>352</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>353</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>355</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>355</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>356</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>358</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>358</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>359</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>360</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>361</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>363</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>364</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'max_indx' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>365</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>366</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>366</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'j&lt;m.points.size()' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>377</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>378</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>379</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'max_indx' is an In/Out argument to 'std::vector&lt;bool,std::allocator&lt;bool&gt; &gt;::[]' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.32.31326\include\vector:3018)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>CollisionDetect.cpp</FILENAME>
        <LINE>379</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'max_indx' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConstraintSolver.h</FILENAME>
      <LINE>12</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Constraint::b' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Constraint::{ctor}</FUNCTION>
    <DECORATED>??0Constraint@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Constraint::b</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConstraintSolver.h</FILENAME>
      <LINE>43</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::ContactConstraint::psuedo_target_val' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::ContactConstraint::{ctor}</FUNCTION>
    <DECORATED>??0ContactConstraint@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>43</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::ContactConstraint::psuedo_target_val</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConstraintSolver.h</FILENAME>
      <LINE>67</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::FrictionConstraint::inertia_val' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::FrictionConstraint::{ctor}</FUNCTION>
    <DECORATED>??0FrictionConstraint@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>67</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::FrictionConstraint::inertia_val</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>PhysicsEngine.h</FILENAME>
      <LINE>14</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::PhysicsEngine::step_time' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::PhysicsEngine::{ctor}</FUNCTION>
    <DECORATED>??0PhysicsEngine@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::PhysicsEngine::step_time</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'maxD_i'.</DESCRIPTION>
    <FUNCTION>phyz::ConvexPoly::gen_interiorP</FUNCTION>
    <DECORATED>?gen_interiorP@ConvexPoly@phyz@@QEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>62</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>66</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_i' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'i&lt;points.size()' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'maxD_i' is an In/Out argument to 'std::vector&lt;mthz::Vec3,std::allocator&lt;mthz::Vec3&gt; &gt;::[]' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.32.31326\include\vector:1728)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_i' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'maxD_j'.</DESCRIPTION>
    <FUNCTION>phyz::ConvexPoly::gen_interiorP</FUNCTION>
    <DECORATED>?gen_interiorP@ConvexPoly@phyz@@QEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>62</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>66</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>67</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_j' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'i&lt;points.size()' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'maxD_j' is an In/Out argument to 'std::vector&lt;mthz::Vec3,std::allocator&lt;mthz::Vec3&gt; &gt;::[]' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.32.31326\include\vector:1728)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
        <FILENAME>ConvexPoly.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'maxD_j' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'std::numeric_limits&lt;double&gt;::infinity' is constexpr, mark variable 'inf' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>phyz::ConvexPoly::gen_AABB</FUNCTION>
    <DECORATED>?gen_AABB@ConvexPoly@phyz@@QEBA?AUAABB@@XZ</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Surface::surfaceID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@phyz@@QEAA@AEBV01@PEAVConvexPoly@1@@Z</DECORATED>
    <FUNCLINE>277</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Surface::surfaceID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>281</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::Surface::surfaceID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>281</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::Surface::surfaceID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>ConvexPoly.cpp</FILENAME>
      <LINE>300</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>Size mismatch: 'unsigned __int64' passed as _Param_(3) when 'int' is required in call to 'printf'. </DESCRIPTION>
    <FUNCTION>phyz::Surface::getPointI</FUNCTION>
    <DECORATED>?getPointI@Surface@phyz@@QEBA?AVVec3@mthz@@H@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>PhysicsEngine.cpp</FILENAME>
      <LINE>233</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::PhysicsEngine::bodySleepy</FUNCTION>
    <DECORATED>?bodySleepy@PhysicsEngine@phyz@@AEAA_NAEBV?$vector@UMovementState@RigidBody@phyz@@V?$allocator@UMovementState@RigidBody@phyz@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>PhysicsEngine.cpp</FILENAME>
      <LINE>248</LINE>
      <COLUMN>100</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::PhysicsEngine::bodySleepy</FUNCTION>
    <DECORATED>?bodySleepy@PhysicsEngine@phyz@@AEAA_NAEBV?$vector@UMovementState@RigidBody@phyz@@V?$allocator@UMovementState@RigidBody@phyz@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>PhysicsEngine.cpp</FILENAME>
      <LINE>249</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>phyz::PhysicsEngine::bodySleepy</FUNCTION>
    <DECORATED>?bodySleepy@PhysicsEngine@phyz@@AEAA_NAEBV?$vector@UMovementState@RigidBody@phyz@@V?$allocator@UMovementState@RigidBody@phyz@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\dev\ConstraintPhysics\ConstraintPhysics\src\</FILEPATH>
      <FILENAME>PhysicsEngine.h</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'phyz::PhysicsEngine::Contact::magic' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>phyz::PhysicsEngine::Contact::{ctor}</FUNCTION>
    <DECORATED>??0Contact@PhysicsEngine@phyz@@QEAA@XZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>phyz::PhysicsEngine::Contact::magic</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT></DEFECTS>